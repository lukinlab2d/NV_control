"""
This file is part of B00 codes based on b26_toolkit. Questions are addressed to Hoang Le.
"""
import pyvisa as visa
import sys
from qcodes.instrument.base import Instrument
from qcodes.instrument.parameter import Parameter

class AG33522A():
    def __init__(self, name='AG33522A', AGnum=1, settings=None, **kwargs) -> None:
        rm = visa.ResourceManager()
        self.AGnum = AGnum
        if AGnum == 1:
            self.AG = rm.open_resource('USB0::0x0957::0x2307::MY50001552::INSTR') # Agilent 33522A phase-bandwidth tunable AWG
            self.AG.query('*IDN?')

    def set_function(self, function, channel=1):
        self.AG.write('SOUR' + str(channel) + ':FUNC ' + function)

    def set_freq(self, freq, channel=1, units='Hz'):
        self.AG.write('SOUR' + str(channel) + ':FREQ:MODE CW')
        self.AG.write('SOUR' + str(channel) + ':FREQ ' + str(freq))
    
    def set_amplitude(self, amplitude, channel=1, units='mVpp'):
        self.AG.write('SOUR' + str(channel) + ':VOLT ' + str(amplitude) + ' ' + units)

    def set_DCoffset(self, DCoffset, channel=1, units='mV'):
        self.AG.write('SOUR' + str(channel) + ':VOLT:OFF ' + str(DCoffset) + ' ' + units)
    
    def enable_RFOutput(self, channel=1):
        self.AG.write('OUTP' + str(channel) + ' ON')

    def disable_RFOutput(self, channel=1):
        self.AG.write('OUTP' + str(channel) + ' OFF')
    
    def apply(self, channel=1, function='SIN', freq=2e6, amplitude=0.01, DCoffset=0):
        self.AG.write('SOUR' + str(channel) + ':APPL:' + function + ' ' + str(freq) + ',' + str(amplitude) + ',' + str(DCoffset))
        
    
    def set_PMsource(self, channel=1, source='INT'):
        self.AG.write('SOUR' + str(channel) + ':PM:SOUR ' + source)
    def set_PMfunction(self, channel=1, function='NOIS'):
        self.AG.write('SOUR' + str(channel) + ':PM:INT:FUNC ' + function)
    def set_PMfreq(self, channel=1, freq=1e3):
        self.AG.write('SOUR' + str(channel) + ':PM:INT:FREQ ' + str(freq))
    def set_PMdeviation(self, channel=1, dev=90):
        self.AG.write('SOUR' + str(channel) + ':PM:DEV ' + str(dev))
    def enable_PM(self, channel=1):
        self.AG.write('SOUR' + str(channel) + ':PM:STAT ON')
    def disable_PM(self, channel=1):
        self.AG.write('SOUR' + str(channel) + ':PM:STAT OFF')

    def set_noiseBandwidth(self,channel=1,bandwidth=20e3):
        self.AG.write('SOUR' + str(channel) + ':FUNC:NOIS:BAND ' + str(bandwidth))
        

if __name__ == '__main__':
    AG = AG33522A()
    AG.disable_PM()
    AG.disable_RFOutput()
    
    # AG.set_PMsource()
    # AG.set_PMfunction(function='NOIS')
    # AG.set_PMdeviation()
    # AG.set_noiseBandwidth(bandwidth=2e4)

    # AG.apply(function='SIN', freq=3e6, amplitude=16, DCoffset=0)
    # AG.enable_PM()
    